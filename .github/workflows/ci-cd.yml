name: Whiteboard CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 캐시 설정(npm 기준)
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 프론트엔드 빌드 및 배포
      - name: Install & Build Frontend
        working-directory: ./client
        env:
          VITE_SOCKET_URL: ${{ secrets.VITE_SOCKET_URL }}
        run: |
          npm ci
          npm run build

      # Object Storage 업로드
      - name: Deploy to Object Storage
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.NCP_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.NCP_SECRET_KEY }}
        run: |
          # S3 업로드
          aws s3 sync ./client/dist s3://test-web30 \
            --endpoint-url https://kr.object.ncloudstorage.com \
            --region kr-standard
      # 도커 빌드 & 배포
      - name: Docker Setup
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/whiteboard:latest

      # 서버 배포
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ncloud
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 새 이미지 풀
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/whiteboard:latest

            # 기존 컨테이너 정지 & 제거
            docker stop whiteboard || true
            docker rm whiteboard || true

            # 새 컨테이너 실행
            docker run -d \
              --name whiteboard \
              -p 3000:3000 \
              --restart unless-stopped \
              # -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/whiteboard:latest
